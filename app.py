# app.py ‚Äî DreamDate‚ÄØAI (Streamlit + Groq)
import datetime
import streamlit as st
from openai import OpenAI  # openai>=1.1.0

# --- 1. Groq client ---
client = OpenAI(
    api_key=st.secrets["GROQ_API_KEY"],
    base_url="https://api.groq.com/openai/v1"
)
MODEL = "llama3-70b-8192"

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∫–µ—Ç—ã ---
if "form_saved" not in st.session_state:
    st.session_state.form_saved = False
if "character_created" not in st.session_state:
    st.session_state.character_created = False
if "msgs" not in st.session_state:
    st.session_state.msgs = []

# --- 2. –ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (sidebar) ---
with st.sidebar:
    st.header("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∫–µ—Ç—ã")
    gender = st.selectbox("–ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", ["–î–µ–≤—É—à–∫–∞", "–ü–∞—Ä–µ–Ω—å", "–ù–µ–±–∏–Ω–∞—Ä–Ω—ã–π"])
    age = st.slider("–í–æ–∑—Ä–∞—Å—Ç", 18, 60, 25)
    city = st.text_input("–ì–æ—Ä–æ–¥/—á–∞—Å–æ–≤–æ–π –ø–æ—è—Å", "–ú–æ—Å–∫–≤–∞")
    
    st.markdown("### –í–Ω–µ—à–Ω–∏–π –≤–∞–π–±")
    fashion = st.selectbox("–°—Ç–∏–ª—å –æ–¥–µ–∂–¥—ã", ["Casual", "–°–ø–æ—Ä—Ç‚Äë—à–∏–∫", "Elegant", "Dark‚Äëacademia", "Soft‚Äëgirl"])
    vibe = st.selectbox("–í–∏–∑—É–∞–ª—å–Ω—ã–π –≤–∞–π–±", ["–°–æ–ª–Ω–µ—á–Ω—ã–π", "–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π", "–ì–∏–∫", "–ê—Ä—Ç‚Äë–±–æ—Ö–æ"])
    
    st.markdown("### –•–æ–±–±–∏ & –∏–Ω—Ç–µ—Ä–µ—Å—ã")
    hobbies = st.text_input("–•–æ–±–±–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)", "–∫–∏–Ω–æ, –±–µ–≥, –∫–æ–º–∏–∫—Å—ã")
    music = st.text_input("–õ—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞/–≥—Ä—É–ø–ø—ã", "The¬†1975, Arctic¬†Monkeys")
    
    st.markdown("### –•–∞—Ä–∞–∫—Ç–µ—Ä")
    traits = st.multiselect("–ß–µ—Ä—Ç—ã", ["–Æ–º–æ—Ä–∏—Å—Ç–∏—á–Ω—ã–π", "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "Sassy", "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç", "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç"])
    temper = st.selectbox("–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç", ["–°–ø–æ–∫–æ–π–Ω—ã–π", "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π", "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π"])
    
    st.markdown("### –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏")
    dislikes = st.text_input("–ß—Ç–æ –±–æ—Ç –Ω–µ –ª—é–±–∏—Ç", "–æ–ø–æ–∑–¥–∞–Ω–∏—è, –≥—Ä—É–±–æ—Å—Ç—å")

# --- 3. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
if not st.session_state.form_saved:
    st.title("DreamDate‚ÄØAI ‚Äî —Ç—Ä–µ–Ω–∏—Ä—É–π—Å—è –≤ –¥–µ–π—Ç–∏–Ω–≥–µ")
    st.markdown("""
        <style>
            .form-container {
                background-color: #00dc00;
                padding: 40px 30px;
                border-radius: 35px;
                width: 400px;
                margin: 30px auto;
            }
            .form-input > div > input,
            .form-input > div > div {
                background-color: #fcd966 !important;
                color: black !important;
                border-radius: 6px;
            }
        </style>
    """, unsafe_allow_html=True)

    with st.container():
        st.markdown('<div class="form-container">', unsafe_allow_html=True)

        name = st.text_input("–ò–º—è", key="name", label_visibility="visible")
        sex = st.selectbox("–ü–æ–ª", options=["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"], key="sex")
        default_birthdate = datetime.date(2000, 1, 1)
        max_birthdate = datetime.date(2007, 12, 31)
        birthdate = st.date_input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", value=default_birthdate, 
                                 max_value=max_birthdate, key="birthdate")

        if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"):
            st.session_state.form_saved = True
            st.session_state.user_name = name
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            st.session_state.character_created = False
            st.session_state.personality_saved = False
            st.rerun()

        st.markdown('</div>', unsafe_allow_html=True)

# --- 4. –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (—Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞) ---
if st.session_state.form_saved and not st.session_state.character_created:
    st.title("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    
    st.markdown("""
        <style>
            .big-button {
                padding: 20px;
                border-radius: 15px;
                font-size: 18px;
                font-weight: bold;
                margin: 15px 0;
                text-align: center;
                cursor: pointer;
                transition: all 0.3s;
            }
            .big-button:hover {
                transform: scale(1.03);
            }
            .create-btn {
                background-color: #4CAF50;
                color: white;
            }
            .premade-btn {
                background-color: #2196F3;
                color: white;
            }
            .btn-container {
                display: flex;
                flex-direction: column;
                max-width: 600px;
                margin: 0 auto;
            }
        </style>
    """, unsafe_allow_html=True)
    
    with st.container():
        # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        st.markdown('<div class="btn-container">', unsafe_allow_html=True)
        if st.button("–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", key="create_custom"):
            st.session_state.character_type = "custom"
            st.session_state.character_created = True
            st.rerun()
        st.markdown('<div class="big-button create-btn">–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</div>', unsafe_allow_html=True)
        
        st.divider()
        
        # –ö–Ω–æ–ø–∫–∏ –≥–æ—Ç–æ–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
        st.subheader("–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤–æ–≥–æ:")
        
        col1, col2, col3 = st.columns(3)
        with col1:
            if st.button("–ü–µ—Ä—Å–æ–Ω–∞–∂ 1", key="premade_1"):
                st.session_state.character_type = "premade_1"
                st.session_state.character_created = True
                st.rerun()
            st.markdown('<div class="big-button premade-btn">–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç</div>', unsafe_allow_html=True)
            st.caption("–õ—é–±–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö, –ª–µ–≥–∫–æ –∑–∞–≤–æ–¥–∏—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞")
        
        with col2:
            if st.button("–ü–µ—Ä—Å–æ–Ω–∞–∂ 2", key="premade_2"):
                st.session_state.character_type = "premade_2"
                st.session_state.character_created = True
                st.rerun()
            st.markdown('<div class="big-button premade-btn">–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç</div>', unsafe_allow_html=True)
            st.caption("–¶–µ–Ω–∏—Ç –≥–ª—É–±–æ–∫–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã, –ª—é–±–∏—Ç –∏—Å–∫—É—Å—Å—Ç–≤–æ")
        
        with col3:
            if st.button("–ü–µ—Ä—Å–æ–Ω–∞–∂ 3", key="premade_3"):
                st.session_state.character_type = "premade_3"
                st.session_state.character_created = True
                st.rerun()
            st.markdown('<div class="big-button premade-btn">–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∞—Ä—Ç–∏—Å—Ç–∏—á–Ω—ã–π</div>', unsafe_allow_html=True)
            st.caption("–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å —Å –Ω–µ–æ–±—ã—á–Ω—ã–º –≤–∑–≥–ª—è–¥–æ–º")
        
        st.markdown('</div>', unsafe_allow_html=True)

# --- 5. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (—Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞) ---
if st.session_state.get("character_created", False) and st.session_state.character_type == "custom":
    if "personality_saved" not in st.session_state:
        st.session_state.personality_saved = False
    
    if not st.session_state.personality_saved:
        st.title("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        
        st.markdown("""
            <style>
                .slider-container {
                    background: #f0f2f6;
                    border-radius: 12px;
                    padding: 20px;
                    margin-bottom: 25px;
                }
                .slider-header {
                    display: flex;
                    justify-content: space-between;
                    margin-bottom: 10px;
                    font-weight: bold;
                }
                .icon {
                    font-size: 24px;
                    margin: 0 10px;
                }
            </style>
        """, unsafe_allow_html=True)
        
        # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–ª–∞–π–¥–µ—Ä–æ–≤
        col1, col2 = st.columns(2)
        with col1:
            with st.container():
                st.markdown('<div class="slider-container">', unsafe_allow_html=True)
                st.markdown('<div class="slider-header"><span>üë• –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç</span><span>üßò –ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç</span></div>', unsafe_allow_html=True)
                mbti_ei = st.slider("–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç/–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç", 0, 100, 50, key="mbti_ei", label_visibility="collapsed")
                st.markdown('</div>', unsafe_allow_html=True)
        
        with col2:
            with st.container():
                st.markdown('<div class="slider-container">', unsafe_allow_html=True)
                st.markdown('<div class="slider-header"><span>üìê –†–µ–∞–ª–∏—Å—Ç</span><span>üåà –ú–µ—á—Ç–∞—Ç–µ–ª—å</span></div>', unsafe_allow_html=True)
                mbti_ns = st.slider("–†–µ–∞–ª–∏—Å—Ç/–ú–µ—á—Ç–∞—Ç–µ–ª—å", 0, 100, 50, key="mbti_ns", label_visibility="collapsed")
                st.markdown('</div>', unsafe_allow_html=True)
        
        # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–ª–∞–π–¥–µ—Ä–æ–≤
        col3, col4 = st.columns(2)
        with col3:
            with st.container():
                st.markdown('<div class="slider-container">', unsafe_allow_html=True)
                st.markdown('<div class="slider-header"><span>üìä –†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π</span><span>‚ù§Ô∏è –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π</span></div>', unsafe_allow_html=True)
                mbti_tf = st.slider("–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π/–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π", 0, 100, 50, key="mbti_tf", label_visibility="collapsed")
                st.markdown('</div>', unsafe_allow_html=True)
        
        with col4:
            with st.container():
                st.markdown('<div class="slider-container">', unsafe_allow_html=True)
                st.markdown('<div class="slider-header"><span>üìÖ –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π</span><span>üé≤ –°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π</span></div>', unsafe_allow_html=True)
                mbti_jp = st.slider("–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π/–°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π", 0, 100, 50, key="mbti_jp", label_visibility="collapsed")
                st.markdown('</div>', unsafe_allow_html=True)
        
        # –í—ã–±–æ—Ä –ø–æ–ª–∞
        st.markdown("### –ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        selected_gender = st.radio("", ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"], horizontal=True, key="char_gender")
        
        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä", type="primary"):
            st.session_state.personality_saved = True
            st.session_state.mbti_ei = mbti_ei
            st.session_state.mbti_ns = mbti_ns
            st.session_state.mbti_tf = mbti_tf
            st.session_state.mbti_jp = mbti_jp
            st.session_state.selected_gender = selected_gender
            st.rerun()

# --- 6. –ß–∞—Ç –∏ –ª–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è ---
if st.session_state.get("personality_saved", False) or (
    st.session_state.get("character_created", False) and st.session_state.character_type != "custom"
):
    # –î–ª—è –≥–æ—Ç–æ–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if st.session_state.character_type.startswith("premade"):
        if st.session_state.character_type == "premade_1":
            st.session_state.mbti_ei = 80  # –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç
            st.session_state.mbti_ns = 30  # –†–µ–∞–ª–∏—Å—Ç
            st.session_state.mbti_tf = 60  # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π
            st.session_state.mbti_jp = 70  # –°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π
            st.session_state.selected_gender = "–ú—É–∂—Å–∫–æ–π"
        elif st.session_state.character_type == "premade_2":
            st.session_state.mbti_ei = 20  # –ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç
            st.session_state.mbti_ns = 80  # –ú–µ—á—Ç–∞—Ç–µ–ª—å
            st.session_state.mbti_tf = 70  # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π
            st.session_state.mbti_jp = 40  # –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π
            st.session_state.selected_gender = "–ñ–µ–Ω—Å–∫–∏–π"
        elif st.session_state.character_type == "premade_3":
            st.session_state.mbti_ei = 50  # –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π
            st.session_state.mbti_ns = 65  # –°–∫–ª–æ–Ω–µ–Ω –∫ –º–µ—á—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            st.session_state.mbti_tf = 75  # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π
            st.session_state.mbti_jp = 60  # –°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π
            st.session_state.selected_gender = "–ù–µ–±–∏–Ω–∞—Ä–Ω—ã–π"

    # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    mbti_text = f"""
    MBTI —á–µ—Ä—Ç—ã: {'–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç' if st.session_state.get('mbti_ei', 50) > 50 else '–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç'}, 
    {'–ú–µ—á—Ç–∞—Ç–µ–ª—å' if st.session_state.get('mbti_ns', 50) > 50 else '–†–µ–∞–ª–∏—Å—Ç'}, 
    {'–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π' if st.session_state.get('mbti_tf', 50) > 50 else '–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π'}, 
    {'–°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π' if st.session_state.get('mbti_jp', 50) > 50 else '–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π'}.
    –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è: {st.session_state.get('selected_gender', '–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π').lower()}.
    """

    SYSTEM_PROMPT = f"""
    –¢—ã ‚Äî {gender.lower()} {age} –ª–µ—Ç –∏–∑ {city}. –í–Ω–µ—à–Ω–∏–π —Å—Ç–∏–ª—å: {fashion}, –≤–∞–π–±: {vibe}.
    –£–≤–ª–µ—á–µ–Ω–∏—è: {hobbies}. –õ—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞: {music}.
    –•–∞—Ä–∞–∫—Ç–µ—Ä: {', '.join(traits) or '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π'}, —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç {temper.lower()}.
    –¢–µ–±–µ –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è: {dislikes}.
    {mbti_text}
    –û–±—â–∞–π—Å—è –≤ —á–∞—Ç–µ, –∫–∞–∫ –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–≤–∏–¥–∞–Ω–∏–∏ –≤ –¢–∏–Ω–¥–µ—Ä–µ: —Ñ–ª–∏—Ä—Ç—É–π, –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ç–µ–º—É.
    """

    # --- –ß–∞—Ç: –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    user_input = st.chat_input("–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–¥–µ–∞–ª—å–Ω–æ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É‚Ä¶")
    if user_input:
        username = st.session_state.user_name
        user_message = f"**{username}:** {user_input}"
        st.session_state.msgs.append({"role": "user", "content": user_message})

        messages = [{"role": "system", "content": SYSTEM_PROMPT}] + st.session_state.msgs
        try:
            resp = client.chat.completions.create(
                model=MODEL,
                messages=messages,
                temperature=0.85,
                max_tokens=256
            )
            bot = resp.choices[0].message.content.strip()
            st.session_state.msgs.append({"role": "assistant", "content": bot})
        except Exception as e:
            st.error(f"Groq error: {e}")

    # --- –í—ã–≤–æ–¥ —á–∞—Ç–∞ ---
    for m in st.session_state.msgs:
        with st.chat_message(m["role"]):
            st.markdown(m["content"])

    # --- Feedback ---
    st.divider()
    if st.button("–ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–¥–±–µ–∫ –æ –º–æ—ë–º —Å—Ç–∏–ª–µ –æ–±—â–µ–Ω–∏—è"):
        user_dialog = "\n".join(
            [m["content"] for m in st.session_state.msgs if "user_name" in st.session_state and m["role"] == "user"]
        )[:4000]

        fb_prompt = f"""
        –¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è–º –∏ –¥–µ–π—Ç–∏–Ω–≥—É. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –Ω–∏–∂–µ –∏ –¥–∞–π —Ç—Ä–∏ –ø—É–Ω–∫—Ç–∞: 1) —á—Ç–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ, 2) —á—Ç–æ –º–æ–∂–µ—Ç –æ—Ç—Ç–æ–ª–∫–Ω—É—Ç—å, 3) —Å–æ–≤–µ—Ç
        –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É. –°–æ–æ–±—â–µ–Ω–∏—è:\n{user_dialog}
        """
        try:
            fb = client.chat.completions.create(
                model=MODEL,
                messages=[{"role": "system", "content": fb_prompt}],
                temperature=0.5,
                max_tokens=300
            )
            with st.chat_message("assistant"):
                st.subheader("üìù –§–∏–¥–±–µ–∫ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞:")
                st.markdown(fb.choices[0].message.content)
        except Exception as e:
            st.error(f"Groq feedback error: {e}")
