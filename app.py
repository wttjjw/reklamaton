# app.py ‚Äî DreamDate¬†AI (Streamlit + Groq)
import streamlit as st
from openai import OpenAI  # openai>=1.1.0

# --- 1. Groq client ---
client = OpenAI(
    api_key=st.secrets["GROQ_API_KEY"],
    base_url="https://api.groq.com/openai/v1"
)
MODEL = "llama3-70b-8192"

# --- 2. –ê–Ω–∫–µ—Ç–∞ (sidebar) ---
st.title("DreamDate‚ÄØAI ‚Äî —Ç—Ä–µ–Ω–∏—Ä—É–π—Å—è –≤ –¥–µ–π—Ç–∏–Ω–≥–µ")
with st.sidebar:
    st.header("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∫–µ—Ç—ã")
    gender   = st.selectbox("–ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", ["–î–µ–≤—É—à–∫–∞", "–ü–∞—Ä–µ–Ω—å", "–ù–µ–±–∏–Ω–∞—Ä–Ω—ã–π"])
    age      = st.slider("–í–æ–∑—Ä–∞—Å—Ç", 18, 60, 25)
    city     = st.text_input("–ì–æ—Ä–æ–¥/—á–∞—Å–æ–≤–æ–π –ø–æ—è—Å", "–ú–æ—Å–∫–≤–∞")
    
    st.markdown("### –í–Ω–µ—à–Ω–∏–π –≤–∞–π–±")
    fashion  = st.selectbox("–°—Ç–∏–ª—å –æ–¥–µ–∂–¥—ã", ["Casual", "–°–ø–æ—Ä—Ç‚Äë—à–∏–∫", "Elegant", "Dark‚Äëacademia", "Soft‚Äëgirl"])
    vibe     = st.selectbox("–í–∏–∑—É–∞–ª—å–Ω—ã–π –≤–∞–π–±", ["–°–æ–ª–Ω–µ—á–Ω—ã–π", "–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π", "–ì–∏–∫", "–ê—Ä—Ç‚Äë–±–æ—Ö–æ"])
    
    st.markdown("### –•–æ–±–±–∏ & –∏–Ω—Ç–µ—Ä–µ—Å—ã")
    hobbies  = st.text_input("–•–æ–±–±–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)", "–∫–∏–Ω–æ, –±–µ–≥, –∫–æ–º–∏–∫—Å—ã")
    music    = st.text_input("–õ—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞/–≥—Ä—É–ø–ø—ã", "The¬†1975, Arctic¬†Monkeys")
    
    st.markdown("### –•–∞—Ä–∞–∫—Ç–µ—Ä")
    traits   = st.multiselect("–ß–µ—Ä—Ç—ã", ["–Æ–º–æ—Ä–∏—Å—Ç–∏—á–Ω—ã–π", "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "Sassy", "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç", "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç"])
    temper   = st.selectbox("–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç", ["–°–ø–æ–∫–æ–π–Ω—ã–π", "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π", "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π"])
    
    st.markdown("### –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏")
    dislikes = st.text_input("–ß—Ç–æ –±–æ—Ç –Ω–µ –ª—é–±–∏—Ç", "–æ–ø–æ–∑–¥–∞–Ω–∏—è, –≥—Ä—É–±–æ—Å—Ç—å")

# --- 2.5. –°—Ç–∏–ª—å–Ω–∞—è –≤–∏–∑—É–∞–ª—å–Ω–∞—è –∞–Ω–∫–µ—Ç–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.markdown("""
    <style>
        .form-container {
            background-color: #c8c8cc;
            padding: 40px 30px;
            border-radius: 35px;
            width: 400px;
            margin: 30px auto;
        }
        .form-input > div > input,
        .form-input > div > div {
            background-color: #fcd966 !important;
            color: black !important;
            border-radius: 6px;
        }
    </style>
""", unsafe_allow_html=True)

with st.container():
    st.markdown('<div class="form-container">', unsafe_allow_html=True)
    
    name = st.text_input("–ò–º—è", key="name", label_visibility="visible")
    sex = st.selectbox("–ü–æ–ª", options=["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"], key="sex")
    max_birthdate = datetime.date(2007, 12, 31)  # –ª–∏–º–∏—Ç ‚Äî 2007 –≥–æ–¥
    birthdate = st.date_input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", max_value=max_birthdate, key="birthdate")

    st.markdown('</div>', unsafe_allow_html=True)

# --- 3. System‚Äëprompt –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∫–µ—Ç—ã ---
SYSTEM_PROMPT = f"""
–¢—ã ‚Äî {gender.lower()} {age}¬†–ª–µ—Ç –∏–∑ {city}. –í–Ω–µ—à–Ω–∏–π —Å—Ç–∏–ª—å: {fashion}, –≤–∞–π–±: {vibe}.
–£–≤–ª–µ—á–µ–Ω–∏—è: {hobbies}. –õ—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞: {music}.
–•–∞—Ä–∞–∫—Ç–µ—Ä: {', '.join(traits) or '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π'}, —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç {temper.lower()}.
–¢–µ–±–µ –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è: {dislikes}.
–û–±—â–∞–π—Å—è –≤ —á–∞—Ç–µ, –∫–∞–∫ –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–≤–∏–¥–∞–Ω–∏–∏ –≤ –¢–∏–Ω–¥–µ—Ä–µ: —Ñ–ª–∏—Ä—Ç—É–π, –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ç–µ–º—É.
"""

# --- 4. –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ ---
if "msgs" not in st.session_state:
    st.session_state.msgs = []

# --- 5. –ß–∞—Ç ---
user_input = st.chat_input("–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–¥–µ–∞–ª—å–Ω–æ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É‚Ä¶")
if user_input:
    st.session_state.msgs.append({"role": "user", "content": user_input})
    messages = [{"role": "system", "content": SYSTEM_PROMPT}] + st.session_state.msgs
    
    try:
        resp = client.chat.completions.create(
            model=MODEL,
            messages=messages,
            temperature=0.85,
            max_tokens=256
        )
        bot = resp.choices[0].message.content.strip()
        st.session_state.msgs.append({"role": "assistant", "content": bot})
    except Exception as e:
        st.error(f"Groq error: {e}")

# –≤—ã–≤–æ–¥ —á–∞—Ç–∞
for m in st.session_state.msgs:
    with st.chat_message(m["role"]):
        st.markdown(m["content"])

# --- 6. Feedback ---
st.divider()
if st.button("–ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–¥–±–µ–∫ –æ –º–æ—ë–º —Å—Ç–∏–ª–µ –æ–±—â–µ–Ω–∏—è"):
    user_dialog = "\n".join(
        [m["content"] for m in st.session_state.msgs if m["role"] == "user"]
    )[:4000]  # safety slice
    
    fb_prompt = f"""
    –¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è–º –∏ –¥–µ–π—Ç–∏–Ω–≥—É. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –Ω–∏–∂–µ –∏ –¥–∞–π —Ç—Ä–∏ –ø—É–Ω–∫—Ç–∞: 1) —á—Ç–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ, 2) —á—Ç–æ –º–æ–∂–µ—Ç –æ—Ç—Ç–æ–ª–∫–Ω—É—Ç—å, 3) —Å–æ–≤–µ—Ç
    –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É. –°–æ–æ–±—â–µ–Ω–∏—è:\n{user_dialog}
    """
    try:
        fb = client.chat.completions.create(
            model=MODEL,
            messages=[{"role": "system", "content": fb_prompt}],
            temperature=0.5,
            max_tokens=300
        )
        with st.chat_message("assistant"):
            st.subheader("üìù –§–∏–¥–±–µ–∫ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞:")
            st.markdown(fb.choices[0].message.content)
    except Exception as e:
        st.error(f"Groq feedback error: {e}")
