# app.py ‚Äî DreamDate‚ÄØAI (Streamlit + Groq)
import datetime
import streamlit as st
from openai import OpenAI  # openai>=1.1.0


# --- 1. Groq client ---
client = OpenAI(
    api_key=st.secrets["GROQ_API_KEY"],
    base_url="https://api.groq.com/openai/v1"
)
MODEL = "llama3-70b-8192"

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∫–µ—Ç—ã ---
if "form_saved" not in st.session_state:
    st.session_state.form_saved = False
if "character_created" not in st.session_state:
    st.session_state.character_created = False
if "msgs" not in st.session_state:
    st.session_state.msgs = []
if "char_settings" not in st.session_state:
    st.session_state.char_settings = {
        "gender": "–î–µ–≤—É—à–∫–∞",
        "age": "23-27",
        "city": "–ú–æ—Å–∫–≤–∞",
        "fashion": "Casual",
        "vibe": "–°–æ–ª–Ω–µ—á–Ω—ã–π",
        "hobbies": [],
        "music": [],
        "traits": [],
        "temper": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
        "dislikes": [],
        "style": "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π"
    }

# --- –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º ---
st.markdown("""
    <style>
        :root {
            --primary: #6a11cb;
            --secondary: #2575fc;
            --accent: #ff6b6b;
            --success: #4CAF50;
            --warning: #FF9800;
            --danger: #F44336;
            --light: #f8f9fa;
            --dark: #212529;
        }
        
        body {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            background-attachment: fixed;
            background-size: cover;
            color: var(--dark);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .stApp {
            background: rgba(255, 255, 255, 0.92);
            border-radius: 24px;
            box-shadow: 0 12px 40px rgba(31, 38, 135, 0.3);
            backdrop-filter: blur(8px);
            margin: 2rem auto;
            padding: 2.5rem;
            max-width: 900px;
        }
        
        h1, h2, h3 {
            color: var(--primary);
            font-weight: 700;
            margin-bottom: 1.2rem;
        }
        
        .section {
            background: rgba(255, 255, 255, 0.8);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 28px;
            box-shadow: 0 6px 24px rgba(0,0,0,0.08);
            border-left: 5px solid var(--primary);
            transition: all 0.3s ease;
        }
        
        .section:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.12);
        }
        
        .section-title {
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 1.8rem;
            margin-bottom: 1.5rem;
            color: var(--primary);
        }
        
        .tag {
            display: inline-block;
            border-radius: 20px;
            padding: 10px 20px;
            margin: 8px 6px;
            cursor: pointer;
            transition: all 0.25s;
            text-align: center;
            font-weight: 600;
            box-shadow: 0 4px 10px rgba(0,0,0,0.08);
            border: 2px solid transparent;
            min-width: 120px;
        }
        
        .tag:hover {
            transform: translateY(-3px) scale(1.03);
            box-shadow: 0 8px 15px rgba(0,0,0,0.12);
        }
        
        .tag.selected {
            color: white !important;
            font-weight: 700;
            box-shadow: 0 6px 15px rgba(0,0,0,0.15);
            border: 2px solid white;
        }
        
        .slider-container {
            background: rgba(255, 255, 255, 0.7);
            border-radius: 16px;
            padding: 20px;
            margin: 20px 0;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        }
        
        .slider-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-weight: 600;
            color: var(--primary);
        }
        
        .slider-values {
            display: flex;
            justify-content: space-between;
            margin-top: 5px;
            color: var(--dark);
            font-weight: 500;
        }
        
        .save-btn {
            background: linear-gradient(145deg, var(--success), #2E7D32);
            color: white !important;
            font-size: 1.2rem;
            font-weight: 700;
            padding: 16px 32px !important;
            border-radius: 16px !important;
            margin-top: 20px;
            width: 100%;
            transition: all 0.3s !important;
            box-shadow: 0 8px 20px rgba(76, 175, 80, 0.3) !important;
        }
        
        .save-btn:hover {
            transform: translateY(-5px) !important;
            box-shadow: 0 12px 25px rgba(76, 175, 80, 0.4) !important;
        }
        
        .emoji-badge {
            font-size: 1.8rem;
            margin-right: 10px;
            vertical-align: middle;
        }
        
        .character-card {
            background: linear-gradient(145deg, #ffffff, #f8f9fa);
            border-radius: 24px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 12px 30px rgba(0,0,0,0.12);
            text-align: center;
            border: 2px solid rgba(106, 17, 203, 0.2);
        }
        
        .character-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: linear-gradient(145deg, var(--primary), var(--secondary));
            margin: 0 auto 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 60px;
            color: white;
            box-shadow: 0 8px 20px rgba(106, 17, 203, 0.3);
        }
        
        .character-name {
            font-size: 2rem;
            font-weight: 800;
            color: var(--primary);
            margin-bottom: 10px;
        }
        
        .character-desc {
            font-size: 1.2rem;
            color: var(--dark);
            margin-bottom: 20px;
            line-height: 1.6;
        }
        
        .character-tags {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 12px;
            margin-top: 20px;
        }
        
        .character-tag {
            background: rgba(106, 17, 203, 0.15);
            color: var(--primary);
            border-radius: 20px;
            padding: 8px 16px;
            font-size: 1rem;
            font-weight: 600;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        }
        
        .chat-container {
            background: rgba(255, 255, 255, 0.85);
            border-radius: 24px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            max-height: 500px;
            overflow-y: auto;
        }
        
        .message-container {
            margin-bottom: 20px;
        }
        
        .user-message {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            border-radius: 24px 24px 8px 24px;
            padding: 16px 22px;
            margin-left: 20%;
            box-shadow: 0 6px 15px rgba(106, 17, 203, 0.25);
        }
        
        .bot-message {
            background: white;
            color: var(--dark);
            border-radius: 24px 24px 24px 8px;
            padding: 16px 22px;
            margin-right: 20%;
            box-shadow: 0 6px 15px rgba(0,0,0,0.08);
            border: 1px solid rgba(106, 17, 203, 0.1);
        }
        
        .message-name {
            font-weight: 700;
            margin-bottom: 8px;
            font-size: 0.95rem;
            color: var(--primary);
        }
        
        .feedback-btn {
            background: linear-gradient(145deg, var(--warning), #EF6C00);
            color: white !important;
            font-weight: 700;
            padding: 14px 28px !important;
            border-radius: 16px !important;
            width: 100%;
            margin-top: 20px;
            transition: all 0.3s !important;
            box-shadow: 0 8px 20px rgba(255, 152, 0, 0.3) !important;
        }
        
        .feedback-btn:hover {
            transform: translateY(-5px) !important;
            box-shadow: 0 12px 25px rgba(255, 152, 0, 0.4) !important;
        }
    </style>
""", unsafe_allow_html=True)

# --- 3. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
if not st.session_state.form_saved:
    st.title("‚ú® DreamDate‚ÄØAI ‚Äî —Ç—Ä–µ–Ω–∏—Ä—É–π—Å—è –≤ –¥–µ–π—Ç–∏–Ω–≥–µ")
    
    with st.form("user_form"):
        col1, col2 = st.columns(2)
        with col1:
            name = st.text_input("–í–∞—à–µ –∏–º—è", key="name", label_visibility="visible", 
                                placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
        with col2:
            sex = st.selectbox("–í–∞—à –ø–æ–ª", options=["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"], key="sex")
        
        birthdate = st.date_input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", 
                                min_value=datetime.date(1950, 1, 1),
                                max_value=datetime.date(2007, 12, 31))
        
        if st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", type="primary", use_container_width=True):
            st.session_state.form_saved = True
            st.session_state.user_name = name
            st.session_state.character_created = False
            st.session_state.personality_saved = False
            st.rerun()

# --- 4. –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ---
if st.session_state.form_saved and not st.session_state.character_created:
    st.title("üë• –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    
    # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    st.markdown("""
        <div class="character-card" style="cursor:pointer;" onclick="this.nextElementSibling.click()">
            <div class="character-avatar">‚ú®</div>
            <div class="character-name">–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</div>
            <div class="character-desc">–ü–æ–ª–Ω–∞—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –∏ —Å—Ç–∏–ª—è</div>
            <div class="character-tags">
                <div class="character-tag">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ</div>
                <div class="character-tag">–£–Ω–∏–∫–∞–ª—å–Ω–æ</div>
                <div class="character-tag">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ</div>
            </div>
        </div>
    """, unsafe_allow_html=True)
    if st.button("–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", key="create_custom_main", use_container_width=True):
        st.session_state.character_type = "custom"
        st.session_state.character_created = True
        st.rerun()
    
    # –ì–æ—Ç–æ–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏
    st.markdown('<h2 style="text-align: center; margin: 40px 0 25px 0; color: #6a11cb;">–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:</h2>', unsafe_allow_html=True)
    
    # –ü–µ—Ä—Å–æ–Ω–∞–∂ 1
    col1, col2, col3 = st.columns(3)
    with col1:
        st.markdown("""
            <div class="character-card" style="cursor:pointer;" onclick="this.nextElementSibling.click()">
                <div class="character-avatar" style="background:linear-gradient(145deg, #2196F3, #0D47A1);">‚ö°</div>
                <div class="character-name">–ê–ª–µ–∫—Å–µ–π</div>
                <div class="character-desc">–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, –ª—é–±–∏—Ç —Å–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö</div>
                <div class="character-tags">
                    <div class="character-tag">–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç</div>
                    <div class="character-tag">–°–ø–æ—Ä—Ç</div>
                    <div class="character-tag">–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π</div>
                </div>
            </div>
        """, unsafe_allow_html=True)
        if st.button("–í—ã–±—Ä–∞—Ç—å", key="premade_1_main", use_container_width=True):
            st.session_state.character_type = "premade_1"
            st.session_state.character_created = True
            st.rerun()
    
    # –ü–µ—Ä—Å–æ–Ω–∞–∂ 2
    with col2:
        st.markdown("""
            <div class="character-card" style="cursor:pointer;" onclick="this.nextElementSibling.click()">
                <div class="character-avatar" style="background:linear-gradient(145deg, #9C27B0, #6A1B9A);">üåπ</div>
                <div class="character-name">–ê–Ω–Ω–∞</div>
                <div class="character-desc">–†–æ–º–∞–Ω—Ç–∏—á–Ω–∞—è –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç–∫–∞, —Ü–µ–Ω–∏—Ç –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã</div>
                <div class="character-tags">
                    <div class="character-tag">–†–æ–º–∞–Ω—Ç–∏–∫</div>
                    <div class="character-tag">–ò—Å–∫—É—Å—Å—Ç–≤–æ</div>
                    <div class="character-tag">–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç</div>
                </div>
            </div>
        """, unsafe_allow_html=True)
        if st.button("–í—ã–±—Ä–∞—Ç—å", key="premade_2_main", use_container_width=True):
            st.session_state.character_type = "premade_2"
            st.session_state.character_created = True
            st.rerun()
    
    # –ü–µ—Ä—Å–æ–Ω–∞–∂ 3
    with col3:
        st.markdown("""
            <div class="character-card" style="cursor:pointer;" onclick="this.nextElementSibling.click()">
                <div class="character-avatar" style="background:linear-gradient(145deg, #FF9800, #EF6C00);">üé®</div>
                <div class="character-name">–ú–∞–∫—Å</div>
                <div class="character-desc">–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å —Å –Ω–µ–æ–±—ã—á–Ω—ã–º –≤–∑–≥–ª—è–¥–æ–º –Ω–∞ –º–∏—Ä</div>
                <div class="character-tags">
                    <div class="character-tag">–¢–≤–æ—Ä—á–µ—Å–∫–∏–π</div>
                    <div class="character-tag">–ù–µ–æ–±—ã—á–Ω—ã–π</div>
                    <div class="character-tag">–°—é—Ä–ø—Ä–∏–∑—ã</div>
                </div>
            </div>
        """, unsafe_allow_html=True)
        if st.button("–í—ã–±—Ä–∞—Ç—å", key="premade_3_main", use_container_width=True):
            st.session_state.character_type = "premade_3"
            st.session_state.character_created = True
            st.rerun()

# --- 5. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ---
if st.session_state.get("character_created", False) and st.session_state.character_type == "custom":
    if "personality_saved" not in st.session_state:
        st.session_state.personality_saved = False

    if not st.session_state.personality_saved:
        st.title("–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")

        # --- –ü–æ–ª ---
        genders = ["–î–µ–≤—É—à–∫–∞", "–ü–∞—Ä–µ–Ω—å", "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å"]
        st.markdown("–ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        gender = st.radio(
            "",
            genders,
            key="gender_radio",
            horizontal=True,
            index=genders.index(st.session_state.char_settings.get("gender", "–î–µ–≤—É—à–∫–∞")),
        )
        st.session_state.char_settings["gender"] = gender

        # --- –í–æ–∑—Ä–∞—Å—Ç ---
        st.markdown("–í–æ–∑—Ä–∞—Å—Ç")
        age = st.number_input(
            "",
            min_value=18,
            max_value=100,
            step=1,
            value=int(st.session_state.char_settings.get("age", 23)),
            key="age_input"
        )
        st.session_state.char_settings["age"] = age

        # --- –ì–æ—Ä–æ–¥ ---
        RUS_CITIES = [
            "–ú–æ—Å–∫–≤–∞", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–ö–∞–∑–∞–Ω—å",
            "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "–ß–µ–ª—è–±–∏–Ω—Å–∫", "–°–∞–º–∞—Ä–∞", "–û–º—Å–∫", "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", "–£—Ñ–∞",
            "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫", "–ü–µ—Ä–º—å", "–í–æ—Ä–æ–Ω–µ–∂", "–í–æ–ª–≥–æ–≥—Ä–∞–¥", "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "–°–∞—Ä–∞—Ç–æ–≤",
            "–¢—é–º–µ–Ω—å", "–¢–æ–ª—å—è—Ç—Ç–∏", "–ò–∂–µ–≤—Å–∫", "–ë–∞—Ä–Ω–∞—É–ª", "–£–ª—å—è–Ω–æ–≤—Å–∫", "–ò—Ä–∫—É—Ç—Å–∫",
            "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫", "–Ø—Ä–æ—Å–ª–∞–≤–ª—å", "–¢–æ–º—Å–∫", "–û—Ä–µ–Ω–±—É—Ä–≥", "–ö–µ–º–µ—Ä–æ–≤–æ", "–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫",
            "–†—è–∑–∞–Ω—å", "–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å", "–ü–µ–Ω–∑–∞", "–õ–∏–ø–µ—Ü–∫", "–ö–∏—Ä–æ–≤", "–ß–µ–±–æ–∫—Å–∞—Ä—ã", "–¢—É–ª–∞",
            "–ö—É—Ä—Å–∫", "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥", "–£–ª–∞–Ω-–£–¥—ç", "–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å", "–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å",
            "–ú–∞—Ö–∞—á–∫–∞–ª–∞", "–¢–≤–µ—Ä—å", "–ò–≤–∞–Ω–æ–≤–æ", "–ë—Ä—è–Ω—Å–∫", "–ë–µ–ª–≥–æ—Ä–æ–¥", "–°–æ—á–∏", "–í–ª–∞–¥–∏–º–∏—Ä",
            "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫", "–ù–∞–±–µ—Ä–µ–∂–Ω—ã–µ –ß–µ–ª–Ω—ã", "–ö–∞–ª—É–≥–∞", "–°–º–æ–ª–µ–Ω—Å–∫"
        ]
        st.markdown("–ì–æ—Ä–æ–¥")
        city = st.selectbox(
            "",
            options=RUS_CITIES,
            index=RUS_CITIES.index(st.session_state.char_settings.get("city", "–ú–æ—Å–∫–≤–∞")),
            key="city_select"
        )
        st.session_state.char_settings["city"] = city

        # --- –•–∞—Ä–∞–∫—Ç–µ—Ä –ø–æ —à–∫–∞–ª–∞–º ---
        def five_point_scale(label, key, left_label, right_label):
            st.markdown(f"<div style='font-weight:600;margin-bottom:5px'>{label}</div>", unsafe_allow_html=True)
            cols = st.columns(5)
            selected = int(st.session_state.char_settings.get(key, 3))
            for i in range(1, 6):
                with cols[i-1]:
                    style = (
                        "width:52px;height:52px;border-radius:50%;border:3px solid #37A97E;background:white; font-size:0.1px;"
                        if selected == i else
                        "width:40px;height:40px;border-radius:50%;border:2px solid #CCCCCC;background:white; font-size:0.1px;"
                    )
                    if st.button(" ", key=f"{key}_{i}"):
                        st.session_state.char_settings[key] = i
                    st.markdown(f"<div style='{style}'></div>", unsafe_allow_html=True)
            st.markdown(
                f"<div style='display:flex;justify-content:space-between;margin-top:-10px;'>"
                f"<span style='color:#37A97E;font-size:14px;'>{left_label}</span>"
                f"<span style='color:#9265A7;font-size:14px;'>{right_label}</span>"
                f"</div>", unsafe_allow_html=True)

        five_point_scale("–û–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "extrovert", "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç", "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç")
        five_point_scale("–ú–µ—á—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "dreamer", "–†–µ–∞–ª–∏—Å—Ç", "–ú–µ—á—Ç–∞—Ç–µ–ª—å")
        five_point_scale("–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å", "emotional", "–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π", "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π")
        five_point_scale("–°–ø–æ–Ω—Ç–∞–Ω–Ω–æ—Å—Ç—å", "spontaneous", "–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π", "–°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π")

        # --- –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è (2 —Å—Ç—Ä–æ–∫–∏ –ø–æ 3) ---
        styles_row1 = ["–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π", "–§–ª–∏—Ä—Ç—É—é—â–∏–π", "–ü—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω—ã–π"]
        styles_row2 = ["–ó–∞–≥–∞–¥–æ—á–Ω—ã–π", "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π", "–°–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π"]
        st.markdown("–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è")
        cols1 = st.columns(3)
        for i, style in enumerate(styles_row1):
            with cols1[i]:
                selected = st.session_state.char_settings.get("style") == style
                btn = st.button(style, key=f"style_{style}")
                if btn:
                    st.session_state.char_settings["style"] = style
        cols2 = st.columns(3)
        for i, style in enumerate(styles_row2):
            with cols2[i]:
                selected = st.session_state.char_settings.get("style") == style
                btn = st.button(style, key=f"style_{style}")
                if btn:
                    st.session_state.char_settings["style"] = style

        # --- –ò–Ω—Ç–µ—Ä–µ—Å—ã (—Ö–æ–±–±–∏, –º—É–∑—ã–∫–∞) ---
        hobbies_options = [
            "–ö–∏–Ω–æ", "–ë–µ–≥", "–ö–æ–º–∏–∫—Å—ã", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è",
            "–ö—É–ª–∏–Ω–∞—Ä–∏—è", "–ò–≥—Ä—ã", "–ß—Ç–µ–Ω–∏–µ", "–ô–æ–≥–∞"
        ]
        st.markdown("–•–æ–±–±–∏")
        hobbies = st.multiselect(
            "",
            hobbies_options,
            default=st.session_state.char_settings.get("hobbies", []),
            key="hobbies_multiselect"
        )
        st.session_state.char_settings["hobbies"] = hobbies

        music_options = [
            "–†–æ–∫", "–ü–æ–ø", "–•–∏–ø-—Ö–æ–ø", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "–î–∂–∞–∑",
            "–ö–ª–∞—Å—Å–∏–∫–∞", "–ò–Ω–¥–∏", "–ú–µ—Ç–∞–ª", "R&B"
        ]
        st.markdown("–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è")
        music = st.multiselect(
            "",
            music_options,
            default=st.session_state.char_settings.get("music", []),
            key="music_multiselect"
        )
        st.session_state.char_settings["music"] = music

        # --- –í–Ω–µ—à–Ω–∏–π —Å—Ç–∏–ª—å –∏ –≤–∞–π–± ---
        st.markdown("–°—Ç–∏–ª—å –æ–¥–µ–∂–¥—ã")
        fashion_options = ["Casual", "–°–ø–æ—Ä—Ç-—à–∏–∫", "Elegant", "Dark-academia", "Soft-girl", "–ë–æ—Ö–æ", "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º"]
        fashion = st.selectbox(
            "",
            fashion_options,
            index=fashion_options.index(st.session_state.char_settings.get("fashion", "Casual")),
            key="fashion_select"
        )
        st.session_state.char_settings["fashion"] = fashion

        st.markdown("–í–∏–∑—É–∞–ª—å–Ω—ã–π –≤–∞–π–±")
        vibe_options = ["–°–æ–ª–Ω–µ—á–Ω—ã–π", "–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π", "–ì–∏–∫", "–ê—Ä—Ç-–±–æ—Ö–æ", "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "–ë—Ä—É—Ç–∞–ª—å–Ω—ã–π", "–£—Ç–æ–Ω—á–µ–Ω–Ω—ã–π"]
        vibe = st.selectbox(
            "",
            vibe_options,
            index=vibe_options.index(st.session_state.char_settings.get("vibe", "–°–æ–ª–Ω–µ—á–Ω—ã–π")),
            key="vibe_select"
        )
        st.session_state.char_settings["vibe"] = vibe

        # --- –ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ) ---
        st.markdown("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞")
        traits_options = ["–Æ–º–æ—Ä–∏—Å—Ç–∏—á–Ω—ã–π", "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "Sassy", "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç", "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç", "–î–æ–±—Ä—ã–π", "–£–≤–µ—Ä–µ–Ω–Ω—ã–π", "–°–∫—Ä–æ–º–Ω—ã–π"]
        traits = st.multiselect(
            "",
            traits_options,
            default=st.session_state.char_settings.get("traits", []),
            key="traits_multiselect"
        )
        st.session_state.char_settings["traits"] = traits

        st.markdown("–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç")
        temper_options = ["–°–ø–æ–∫–æ–π–Ω—ã–π", "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π", "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", "–ò–º–ø—É–ª—å—Å–∏–≤–Ω—ã–π", "–§–ª–µ–≥–º–∞—Ç–∏—á–Ω—ã–π"]
        temper = st.selectbox(
            "",
            temper_options,
            index=temper_options.index(st.session_state.char_settings.get("temper", "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π")),
            key="temper_select"
        )
        st.session_state.char_settings["temper"] = temper

        # --- –õ–∏—á–Ω—ã–µ –∞–Ω—Ç–∏–ø–∞—Ç–∏–∏ (–∫—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏) ---
        st.markdown("–ß—Ç–æ –≤–∞–º –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è (–∫—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏)")
        dislikes_options = ["–û–ø–æ–∑–¥–∞–Ω–∏—è", "–ì—Ä—É–±–æ—Å—Ç—å", "–õ–æ–∂—å", "–ù–∞—Ä—Ü–∏—Å—Å–∏–∑–º", "–≠–≥–æ–∏–∑–º", "–ü–∞—Å—Å–∏–≤–Ω–æ—Å—Ç—å", "–ê–≥—Ä–µ—Å—Å–∏—è"]
        dislikes = st.multiselect(
            "",
            dislikes_options,
            default=st.session_state.char_settings.get("dislikes", []),
            key="dislikes_multiselect"
        )
        st.session_state.char_settings["dislikes"] = dislikes

        # --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ---
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", key="save_character", use_container_width=True, type="primary"):
            st.session_state.personality_saved = True
            st.rerun()


# --- 6. –ß–∞—Ç –∏ –ª–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è ---
if st.session_state.get("personality_saved", False) or (
    st.session_state.get("character_created", False) and st.session_state.character_type != "custom"
):
    # –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    with st.container():
        st.markdown('<div class="character-card">', unsafe_allow_html=True)
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        if st.session_state.character_type == "premade_1":
            avatar = "‚ö°"
            name = "–ê–ª–µ–∫—Å–µ–π"
            color = "linear-gradient(145deg, #2196F3, #0D47A1)"
            desc = "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, –ª—é–±–∏—Ç —Å–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö"
            tags = ["–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç", "–°–ø–æ—Ä—Ç", "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π"]
        elif st.session_state.character_type == "premade_2":
            avatar = "üåπ"
            name = "–ê–Ω–Ω–∞"
            color = "linear-gradient(145deg, #9C27B0, #6A1B9A)"
            desc = "–†–æ–º–∞–Ω—Ç–∏—á–Ω–∞—è –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç–∫–∞, —Ü–µ–Ω–∏—Ç –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –≥–ª—É–±–æ–∫–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã"
            tags = ["–†–æ–º–∞–Ω—Ç–∏–∫", "–ò—Å–∫—É—Å—Å—Ç–≤–æ", "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç"]
        elif st.session_state.character_type == "premade_3":
            avatar = "üé®"
            name = "–ú–∞–∫—Å"
            color = "linear-gradient(145deg, #FF9800, #EF6C00)"
            desc = "–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å —Å –Ω–µ–æ–±—ã—á–Ω—ã–º –≤–∑–≥–ª—è–¥–æ–º –Ω–∞ –º–∏—Ä"
            tags = ["–¢–≤–æ—Ä—á–µ—Å–∫–∏–π", "–ù–µ–æ–±—ã—á–Ω—ã–π", "–°—é—Ä–ø—Ä–∏–∑—ã"]
        else:
            gender = st.session_state.char_settings["gender"]
            if gender == "–î–µ–≤—É—à–∫–∞":
                avatar = "üë©"
                name = "–°–æ—Ñ–∏—è"
                color = "linear-gradient(145deg, #9C27B0, #6A1B9A)"
            elif gender == "–ü–∞—Ä–µ–Ω—å":
                avatar = "üë®"
                name = "–ú–∞—Ä–∫"
                color = "linear-gradient(145deg, #2196F3, #0D47A1)"
            else:
                avatar = "üë§"
                name = "–¢–µ–π–ª–æ—Ä"
                color = "linear-gradient(145deg, #4CAF50, #2E7D32)"
            
            desc = f"{st.session_state.char_settings['age']} –ª–µ—Ç, {st.session_state.char_settings['city']}"
            tags = []
            if st.session_state.char_settings["traits"]:
                tags.extend(st.session_state.char_settings["traits"][:2])
            if st.session_state.char_settings["hobbies"]:
                tags.append(st.session_state.char_settings["hobbies"][0])
            if st.session_state.char_settings["temper"]:
                tags.append(st.session_state.char_settings["temper"])
        
        st.markdown(f'<div class="character-avatar" style="background: {color};">{avatar}</div>', unsafe_allow_html=True)
        st.markdown(f'<div class="character-name">{name}</div>', unsafe_allow_html=True)
        st.markdown(f'<div class="character-desc">{desc}</div>', unsafe_allow_html=True)
        
        st.markdown('<div class="character-tags">', unsafe_allow_html=True)
        for tag in tags[:3]:
            st.markdown(f'<div class="character-tag">{tag}</div>', unsafe_allow_html=True)
        st.markdown('</div></div>', unsafe_allow_html=True)
    
    # –î–ª—è –≥–æ—Ç–æ–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if st.session_state.character_type.startswith("premade"):
        if st.session_state.character_type == "premade_1":
            # –≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç
            st.session_state.mbti_ei = 80
            st.session_state.mbti_ns = 30
            st.session_state.mbti_tf = 60
            st.session_state.mbti_jp = 70
            st.session_state.char_settings = {
                "gender": "–ü–∞—Ä–µ–Ω—å",
                "age": "23-27",
                "city": "–ú–æ—Å–∫–≤–∞",
                "fashion": "–°–ø–æ—Ä—Ç-—à–∏–∫",
                "vibe": "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π",
                "hobbies": ["–°–ø–æ—Ä—Ç", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–ö–∏–Ω–æ"],
                "music": ["–†–æ–∫", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"],
                "traits": ["–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç", "–£–≤–µ—Ä–µ–Ω–Ω—ã–π"],
                "temper": "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π",
                "dislikes": ["–õ–µ–Ω—å", "–ü–∞—Å—Å–∏–≤–Ω–æ—Å—Ç—å"],
                "style": "–ü—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω—ã–π"
            }
        elif st.session_state.character_type == "premade_2":
            # –†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç
            st.session_state.mbti_ei = 20
            st.session_state.mbti_ns = 80
            st.session_state.mbti_tf = 70
            st.session_state.mbti_jp = 40
            st.session_state.char_settings = {
                "gender": "–î–µ–≤—É—à–∫–∞",
                "age": "23-27",
                "city": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
                "fashion": "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π",
                "vibe": "–ù–µ–∂–Ω—ã–π",
                "hobbies": ["–ß—Ç–µ–Ω–∏–µ", "–ò—Å–∫—É—Å—Å—Ç–≤–æ", "–ú—É–∑—ã–∫–∞"],
                "music": ["–ò–Ω–¥–∏", "–ö–ª–∞—Å—Å–∏–∫–∞"],
                "traits": ["–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç"],
                "temper": "–°–ø–æ–∫–æ–π–Ω—ã–π",
                "dislikes": ["–ì—Ä—É–±–æ—Å—Ç—å", "–ù–∞—Ä—Ü–∏—Å—Å–∏–∑–º"],
                "style": "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π"
            }
        elif st.session_state.character_type == "premade_3":
            # –ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∞—Ä—Ç–∏—Å—Ç–∏—á–Ω—ã–π
            st.session_state.mbti_ei = 50
            st.session_state.mbti_ns = 65
            st.session_state.mbti_tf = 75
            st.session_state.mbti_jp = 60
            st.session_state.char_settings = {
                "gender": "–ù–µ–±–∏–Ω–∞—Ä–Ω—ã–π",
                "age": "23-27",
                "city": "–î—Ä—É–≥–æ–π",
                "fashion": "–ë–æ—Ö–æ",
                "vibe": "–ó–∞–≥–∞–¥–æ—á–Ω—ã–π",
                "hobbies": ["–ò—Å–∫—É—Å—Å—Ç–≤–æ", "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"],
                "music": ["–ò–Ω–¥–∏", "–î–∂–∞–∑", "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è"],
                "traits": ["–¢–≤–æ—Ä—á–µ—Å–∫–∏–π", "–ú–µ—á—Ç–∞—Ç–µ–ª—å"],
                "temper": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
                "dislikes": ["–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", "–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–∑–º"],
                "style": "–ó–∞–≥–∞–¥–æ—á–Ω—ã–π"
            }

    # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    mbti_text = f"""
    MBTI —á–µ—Ä—Ç—ã: {'–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç' if st.session_state.get('mbti_ei', 50) > 50 else '–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç'}, 
    {'–ú–µ—á—Ç–∞—Ç–µ–ª—å' if st.session_state.get('mbti_ns', 50) > 50 else '–†–µ–∞–ª–∏—Å—Ç'}, 
    {'–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π' if st.session_state.get('mbti_tf', 50) > 50 else '–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π'}, 
    {'–°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π' if st.session_state.get('mbti_jp', 50) > 50 else '–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π'}.
    –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è: {st.session_state.char_settings.get("style", "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π").lower()}.
    """
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    settings = st.session_state.char_settings
    hobbies_str = ", ".join(settings["hobbies"]) if settings["hobbies"] else "–Ω–µ—Ç"
    music_str = ", ".join(settings["music"]) if settings["music"] else "–Ω–µ—Ç"
    traits_str = ", ".join(settings["traits"]) if settings["traits"] else "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π"
    dislikes_str = ", ".join(settings["dislikes"]) if settings["dislikes"] else "–Ω–µ—Ç"

    SYSTEM_PROMPT = f"""
    –¢—ã ‚Äî {settings['gender'].lower()} {settings['age']} –ª–µ—Ç –∏–∑ {settings['city']}. 
    –í–Ω–µ—à–Ω–∏–π —Å—Ç–∏–ª—å: {settings['fashion']}, –≤–∞–π–±: {settings['vibe']}.
    –£–≤–ª–µ—á–µ–Ω–∏—è: {hobbies_str}. –õ—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞: {music_str}.
    –•–∞—Ä–∞–∫—Ç–µ—Ä: {traits_str}, —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç {settings['temper'].lower()}.
    –¢–µ–±–µ –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è: {dislikes_str}.
    {mbti_text}
    –û–±—â–∞–π—Å—è –≤ —á–∞—Ç–µ, –∫–∞–∫ –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–≤–∏–¥–∞–Ω–∏–∏ –≤ –¢–∏–Ω–¥–µ—Ä–µ: —Ñ–ª–∏—Ä—Ç—É–π, –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ç–µ–º—É.
    """

    # --- –ß–∞—Ç: –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    user_input = st.chat_input(f"–ù–∞–ø–∏—à–∏—Ç–µ {name} —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    if user_input:
        username = st.session_state.user_name
        user_message = f"**{username}:** {user_input}"
        st.session_state.msgs.append({"role": "user", "content": user_message})

        messages = [{"role": "system", "content": SYSTEM_PROMPT}] + st.session_state.msgs
        try:
            resp = client.chat.completions.create(
                model=MODEL,
                messages=messages,
                temperature=0.85,
                max_tokens=256
            )
            bot = resp.choices[0].message.content.strip()
            st.session_state.msgs.append({"role": "assistant", "content": bot})
        except Exception as e:
            st.error(f"Groq error: {e}")

    # --- –í—ã–≤–æ–¥ —á–∞—Ç–∞ ---
    st.markdown('<div class="chat-container">', unsafe_allow_html=True)
    
    for m in st.session_state.msgs:
        if m["role"] == "user":
            st.markdown(f"""
                <div class="message-container">
                    <div class="message-name">–í—ã</div>
                    <div class="user-message">{m["content"].split(':', 1)[1].strip()}</div>
                </div>
            """, unsafe_allow_html=True)
        else:
            st.markdown(f"""
                <div class="message-container">
                    <div class="message-name">{name}</div>
                    <div class="bot-message">{m["content"]}</div>
                </div>
            """, unsafe_allow_html=True)
    
    st.markdown('</div>', unsafe_allow_html=True)

    # --- Feedback ---
    if st.button("üìù –ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–¥–±–µ–∫ –æ –º–æ—ë–º —Å—Ç–∏–ª–µ –æ–±—â–µ–Ω–∏—è", key="feedback_btn", 
                use_container_width=True, help="–ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ —Å—Ç–∏–ª—è –æ–±—â–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"):
        user_dialog = "\n".join(
            [m["content"] for m in st.session_state.msgs if m["role"] == "user"]
        )[:4000]

        fb_prompt = f"""
        –¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è–º –∏ –¥–µ–π—Ç–∏–Ω–≥—É. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –Ω–∏–∂–µ –∏ –¥–∞–π —Ç—Ä–∏ –ø—É–Ω–∫—Ç–∞: 1) —á—Ç–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ, 2) —á—Ç–æ –º–æ–∂–µ—Ç –æ—Ç—Ç–æ–ª–∫–Ω—É—Ç—å, 3) —Å–æ–≤–µ—Ç
        –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É. –°–æ–æ–±—â–µ–Ω–∏—è:\n{user_dialog}
        """
        try:
            fb = client.chat.completions.create(
                model=MODEL,
                messages=[{"role": "system", "content": fb_prompt}],
                temperature=0.5,
                max_tokens=300
            )
            with st.chat_message("assistant"):
                st.subheader("üìù –§–∏–¥–±–µ–∫ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞ –ø–æ –æ–±—â–µ–Ω–∏—é:")
                st.markdown(fb.choices[0].message.content)
        except Exception as e:
            st.error(f"Groq feedback error: {e}")
