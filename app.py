"""
PersonaVerse ‚Äë Streamlit MVP
‚Ä¢ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ª–∏—á–Ω–æ—Å—Ç–∏ (Archetype DNA) + –∫–∞—Ä—Ç–æ—á–∫–∞ —Å—Ü–µ–Ω—ã‚Äë—Å—Ç—Ä–µ—Å—Å‚Äë—Ç–µ—Å—Ç–∞
‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π —á–∞—Ç –Ω–∞ Groq (LLM‚Äë—ç–Ω–¥–ø–æ–∏–Ω—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º —Å OpenAI)
‚Ä¢ –ö–Ω–æ–ø–∫–∞ ¬´–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å¬ª¬†‚Äî LLM –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import os
import streamlit as st
from openai import OpenAI   # pip install openai>=1.1.0

# ---------- 1.  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Groq  ----------
client = OpenAI(
    api_key=st.secrets["GROQ_API_KEY"],                       # –≤ Settings ‚Üí Secrets
    base_url="https://api.groq.com/openai/v1"                 # –º–µ–Ω—è–µ–º –±–∞–∑–æ–≤—ã–π URL
)

MODEL_NAME = "llama3-70b-8192"  # –±—ã—Å—Ç—Ä–∞—è –±–æ–ª—å—à–∞—è –º–æ–¥–µ–ª—å –Ω–∞ Groq

# ---------- 2.  UI: –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä DNA ----------
st.title("üß© PersonaVerse¬†‚Äî —Å–æ–±–µ—Ä–∏ —Å–≤–æ–µ–≥–æ –ò–ò‚Äë—Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")

with st.sidebar:
    st.header("üé≠ –ê—Ä—Ö–µ—Ç–∏–ø‚ÄëDNA")
    archetype  = st.selectbox("–ê—Ä—Ö–µ—Ç–∏–ø", [
        "–ú—É–¥—Ä–µ—Ü", "–ì–µ—Ä–æ–π", "–¢—Ä–∏–∫—Å—Ç–µ—Ä", "–ü—Ä–∞–≤–∏—Ç–µ–ª—å", "–õ—é–±–æ–≤–Ω–∏–∫", "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å"
    ])
    core_drive = st.selectbox("–ì–ª–∞–≤–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è (Core¬†Drive)", [
        "–í–ª–∞—Å—Ç—å", "–ü—Ä–∏–∑–Ω–∞–Ω–∏–µ", "–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ", "–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å"
    ])
    tone       = st.selectbox("–¢–æ–Ω –æ–±—â–µ–Ω–∏—è", [
        "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π", "–°–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π", "–•–æ–ª–æ–¥–Ω—ã–π", "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π"
    ])
    mask       = st.selectbox("–í–Ω–µ—à–Ω—è—è –º–∞—Å–∫–∞ (Mask)", [
        "–£–≤–µ—Ä–µ–Ω–Ω—ã–π", "–†–æ–±–∫–∏–π", "–í—ã—Å–æ–∫–æ–º–µ—Ä–Ω—ã–π", "–°–ø–æ–∫–æ–π–Ω—ã–π"
    ])
    flaw       = st.selectbox("–°–ª–∞–±–æ–µ –º–µ—Å—Ç–æ (Flaw)", [
        "–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç", "–ù–µ—Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π", "–ù–µ—Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π", "–ù–∞—Ä—Ü–∏—Å—Å–∏—á–Ω—ã–π"
    ])

    st.markdown("---")
    st.header("üÉè –°—Ü–µ–Ω–∞‚Äë—Å—Ç—Ä–µ—Å—Å‚Äë—Ç–µ—Å—Ç–∞")
    scenario = st.radio(
        "–í—ã–±–µ—Ä–∏ —Å–∏—Ç—É–∞—Ü–∏—é",
        ["üóÇÔ∏è –ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –æ –∑–∞—Ä–ø–ª–∞—Ç–µ",
         "üé§ –ü–∏—Ç—á‚Äë–∏–Ω–≤–µ—Å—Ç–æ—Ä—É (30¬†—Å–µ–∫)",
         "üç∏ Small‚Äëtalk –Ω–∞ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥–µ",
         "üõí –í–æ–∑—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞‚Äë—Å–∫–µ–ø—Ç–∏–∫–∞",
         "üî• –ö–æ–Ω—Ñ–ª–∏–∫—Ç –≤ –∫–æ–º–∞–Ω–¥–µ"]
    )

# ---------- 3.  System‚Äëprompt –Ω–∞ –æ—Å–Ω–æ–≤–µ DNA ----------
SYSTEM_PROMPT = f"""
–¢—ã ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–∂‚Äë{archetype}.
–¢–≤–æ–π Core‚ÄëDrive: {core_drive}.
–¢–æ–Ω –æ–±—â–µ–Ω–∏—è: {tone}.
–í–Ω–µ—à–Ω—è—è –º–∞—Å–∫–∞: {mask}.
–¢–≤–æ—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–ª–∞–±–æ—Å—Ç—å: {flaw}.

–°—Ü–µ–Ω–∞: {scenario}.
–í–µ–¥–∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø–æ–≥—Ä—É–∂–∞—è –µ–≥–æ –≤ —Å–∏—Ç—É–∞—Ü–∏—é.
–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–µ–∞–≥–∏—Ä—É–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å–≤–æ–∏–º–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏,
—Å—Ç–∞—Ä–∞–π—Å—è —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –≤ —Ä–∞–º–∫–∞—Ö —Å—Ü–µ–Ω—ã.
"""

# ---------- 4.  –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤ —Å–µ—Å—Å–∏–∏ ----------
if "history" not in st.session_state:
    st.session_state.history = []

# ---------- 5.  –ß–∞—Ç‚Äë–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ----------
user_msg = st.chat_input("üó®Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ä–µ–ø–ª–∏–∫—É ‚Ä¶")
if user_msg:
    st.session_state.history.append({"role": "user", "content": user_msg})

    messages = [{"role": "system", "content": SYSTEM_PROMPT}] + st.session_state.history

    try:
        groq_response = client.chat.completions.create(
            model   = MODEL_NAME,
            messages=messages,
            temperature=0.8,
            max_tokens=256
        )
        bot_reply = groq_response.choices[0].message.content.strip()
        st.session_state.history.append({"role": "assistant", "content": bot_reply})
    except Exception as e:
        st.error(f"Groq¬†API error: {e}")

# –≤—ã–≤–æ–¥–∏–º –≤—Å—ë
for m in st.session_state.history:
    with st.chat_message(m["role"]):
        st.markdown(m["content"])

# ---------- 6.  –ö–Ω–æ–ø–∫–∞ ¬´–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å¬ª ----------
st.markdown("---")
if st.button("üßë‚Äçüè´ –ü–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"):
    # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–µ–ø–ª–∏–∫–∏
    user_only = "\n".join([x["content"] for x in st.session_state.history if x["role"]=="user"])
    feedback_prompt = f"""
    –¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –º–µ–Ω—Ç–æ—Ä –ø–æ soft‚Äëskills. –ü—Ä–æ—á–∏—Ç–∞–π –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –≤ —Å—Ç—Ä–µ—Å—Å‚Äë—Ç–µ—Å—Ç–µ ({scenario}) –∏ –¥–∞–π 3¬†—Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã + 3¬†–∑–æ–Ω—ã —É–ª—É—á—à–µ–Ω–∏—è
    –≤ —Ñ–æ—Ä–º–∞—Ç–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞. –í–æ—Ç –æ—Ç–≤–µ—Ç—ã:\n\n{user_only}
    """
    try:
        fb = client.chat.completions.create(
            model=MODEL_NAME,
            messages=[
                {"role": "system", "content": feedback_prompt}
            ],
            temperature=0.5,
            max_tokens=300
        )
        with st.chat_message("assistant"):
            st.subheader("üéØ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:")
            st.markdown(fb.choices[0].message.content)
    except Exception as e:
        st.error(f"Groq feedback error: {e}")
