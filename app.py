# app.py ‚Äî DreamDate‚ÄØAI (Streamlit + Groq)
import datetime
import streamlit as st
from openai import OpenAI  # openai>=1.1.0

# --- 1. Groq client ---
client = OpenAI(
    api_key=st.secrets["GROQ_API_KEY"],
    base_url="https://api.groq.com/openai/v1"
)
MODEL = "llama3-70b-8192"

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∫–µ—Ç—ã ---
if "form_saved" not in st.session_state:
    st.session_state.form_saved = False
if "character_created" not in st.session_state:
    st.session_state.character_created = False
if "msgs" not in st.session_state:
    st.session_state.msgs = []
if "char_settings" not in st.session_state:
    st.session_state.char_settings = {
        "gender": "–î–µ–≤—É—à–∫–∞",
        "age": 25,
        "city": "–ú–æ—Å–∫–≤–∞",
        "fashion": "Casual",
        "vibe": "–°–æ–ª–Ω–µ—á–Ω—ã–π",
        "hobbies": [],
        "music": [],
        "traits": [],
        "temper": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
        "dislikes": []
    }

# --- 3. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
if not st.session_state.form_saved:
    st.title("DreamDate‚ÄØAI ‚Äî —Ç—Ä–µ–Ω–∏—Ä—É–π—Å—è –≤ –¥–µ–π—Ç–∏–Ω–≥–µ")
    
    with st.form("user_form"):
        name = st.text_input("–ò–º—è", key="name", label_visibility="visible")
        sex = st.selectbox("–ü–æ–ª", options=["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"], key="sex")
        default_birthdate = datetime.date(2000, 1, 1)
        max_birthdate = datetime.date(2007, 12, 31)
        birthdate = st.date_input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", value=default_birthdate, 
                                max_value=max_birthdate, key="birthdate")
        
        if st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", type="primary"):
            st.session_state.form_saved = True
            st.session_state.user_name = name
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            st.session_state.character_created = False
            st.session_state.personality_saved = False
            st.rerun()

# --- 4. –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏) ---
if st.session_state.form_saved and not st.session_state.character_created:
    st.title("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    
    st.markdown("""
        <style>
            .char-btn {
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                padding: 25px;
                border-radius: 16px;
                background: linear-gradient(145deg, #ffffff, #f0f0f0);
                box-shadow: 5px 5px 15px #d9d9d9, 
                            -5px -5px 15px #ffffff;
                transition: all 0.3s ease;
                text-align: center;
                height: 100%;
                cursor: pointer;
                border: none;
                margin-bottom: 20px;
                width: 100%;
            }
            .char-btn:hover {
                transform: translateY(-5px);
                box-shadow: 8px 8px 20px #d0d0d0, 
                            -8px -8px 20px #ffffff;
            }
            .char-btn h3 {
                margin: 0 0 10px 0;
                color: #333;
                font-size: 1.4rem;
            }
            .char-btn p {
                margin: 0;
                color: #666;
                font-size: 1rem;
            }
            .btn-icon {
                font-size: 42px;
                margin-bottom: 15px;
            }
            .create-btn {
                background: linear-gradient(145deg, #4CAF50, #43A047);
                color: white !important;
            }
            .create-btn h3, .create-btn p {
                color: white !important;
            }
            .premade-btn-1 { background: linear-gradient(145deg, #2196F3, #1E88E5); }
            .premade-btn-2 { background: linear-gradient(145deg, #9C27B0, #8E24AA); }
            .premade-btn-3 { background: linear-gradient(145deg, #FF9800, #FB8C00); }
            .premade-btn-1 h3, .premade-btn-1 p,
            .premade-btn-2 h3, .premade-btn-2 p,
            .premade-btn-3 h3, .premade-btn-3 p {
                color: white !important;
            }
            .btn-container {
                margin: 0 auto;
                max-width: 800px;
            }
        </style>
    """, unsafe_allow_html=True)
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
    with st.container():
        st.markdown('<div class="btn-container">', unsafe_allow_html=True)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        if st.button("", key="create_custom_main"):
            st.session_state.character_type = "custom"
            st.session_state.character_created = True
            st.rerun()
        st.markdown("""
            <button class="char-btn create-btn">
                <div class="btn-icon">‚ú®</div>
                <h3>–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h3>
                <p>–ü–æ–ª–Ω–∞—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –∏ —Å—Ç–∏–ª—è</p>
            </button>
        """, unsafe_allow_html=True)
        
        # –ì–æ—Ç–æ–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        st.markdown('<h2 style="text-align: center; margin: 30px 0 20px 0;">–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:</h2>', unsafe_allow_html=True)
        
        # –¢—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ
        # –ü–µ—Ä—Å–æ–Ω–∞–∂ 1
        if st.button("", key="premade_1_main"):
            st.session_state.character_type = "premade_1"
            st.session_state.character_created = True
            st.rerun()
        st.markdown("""
            <button class="char-btn premade-btn-1">
                <div class="btn-icon">‚ö°</div>
                <h3>–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç</h3>
                <p>–õ—é–±–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö, –ª–µ–≥–∫–æ –∑–∞–≤–æ–¥–∏—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞, –≤—Å–µ–≥–¥–∞ –≤ –¥–≤–∏–∂–µ–Ω–∏–∏</p>
            </button>
        """, unsafe_allow_html=True)
        
        # –ü–µ—Ä—Å–æ–Ω–∞–∂ 2
        if st.button("", key="premade_2_main"):
            st.session_state.character_type = "premade_2"
            st.session_state.character_created = True
            st.rerun()
        st.markdown("""
            <button class="char-btn premade-btn-2">
                <div class="btn-icon">üåπ</div>
                <h3>–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç</h3>
                <p>–¶–µ–Ω–∏—Ç –≥–ª—É–±–æ–∫–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã, –ª—é–±–∏—Ç –∏—Å–∫—É—Å—Å—Ç–≤–æ, –∏—â–µ—Ç –Ω–∞—Å—Ç–æ—è—â—É—é —Å–≤—è–∑—å</p>
            </button>
        """, unsafe_allow_html=True)
        
        # –ü–µ—Ä—Å–æ–Ω–∞–∂ 3
        if st.button("", key="premade_3_main"):
            st.session_state.character_type = "premade_3"
            st.session_state.character_created = True
            st.rerun()
        st.markdown("""
            <button class="char-btn premade-btn-3">
                <div class="btn-icon">üé®</div>
                <h3>–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∞—Ä—Ç–∏—Å—Ç–∏—á–Ω—ã–π</h3>
                <p>–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å —Å –Ω–µ–æ–±—ã—á–Ω—ã–º –≤–∑–≥–ª—è–¥–æ–º –Ω–∞ –º–∏—Ä, –ø–æ–ª–Ω–∞ —Å—é—Ä–ø—Ä–∏–∑–æ–≤</p>
            </button>
        """, unsafe_allow_html=True)
        
        st.markdown('</div>', unsafe_allow_html=True)

# --- 5. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è) ---
if st.session_state.get("character_created", False) and st.session_state.character_type == "custom":
    if "personality_saved" not in st.session_state:
        st.session_state.personality_saved = False
    
    if not st.session_state.personality_saved:
        st.title("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
        if "mbti_ei" not in st.session_state:
            st.session_state.mbti_ei = 50
        if "mbti_ns" not in st.session_state:
            st.session_state.mbti_ns = 50
        if "mbti_tf" not in st.session_state:
            st.session_state.mbti_tf = 50
        if "mbti_jp" not in st.session_state:
            st.session_state.mbti_jp = 50
        if "selected_gender" not in st.session_state:
            st.session_state.selected_gender = "–ú—É–∂—Å–∫–æ–π"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è char_settings
        if not st.session_state.char_settings:
            st.session_state.char_settings = {
                "gender": "–î–µ–≤—É—à–∫–∞",
                "age": 25,
                "city": "–ú–æ—Å–∫–≤–∞",
                "fashion": "Casual",
                "vibe": "–°–æ–ª–Ω–µ—á–Ω—ã–π",
                "hobbies": [],
                "music": [],
                "traits": [],
                "temper": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
                "dislikes": []
            }
        
        # --- –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ---
        with st.container():
            col1, col2, col3 = st.columns(3)
            with col1:
                st.session_state.char_settings["gender"] = st.selectbox(
                    "–ü–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", 
                    ["–î–µ–≤—É—à–∫–∞", "–ü–∞—Ä–µ–Ω—å", "–ù–µ–±–∏–Ω–∞—Ä–Ω—ã–π"],
                    index=["–î–µ–≤—É—à–∫–∞", "–ü–∞—Ä–µ–Ω—å", "–ù–µ–±–∏–Ω–∞—Ä–Ω—ã–π"].index(st.session_state.char_settings["gender"])
                )
            with col2:
                st.session_state.char_settings["age"] = st.slider(
                    "–í–æ–∑—Ä–∞—Å—Ç", 18, 60, st.session_state.char_settings["age"]
                )
            with col3:
                st.session_state.char_settings["city"] = st.text_input(
                    "–ì–æ—Ä–æ–¥/—á–∞—Å–æ–≤–æ–π –ø–æ—è—Å", 
                    st.session_state.char_settings["city"]
                )
        
        # --- –°–ª–∞–π–¥–µ—Ä—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ ---
        st.markdown("### –•–∞—Ä–∞–∫—Ç–µ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        col1, col2 = st.columns(2)
        with col1:
            with st.container():
                st.markdown('<div class="slider-container">', unsafe_allow_html=True)
                st.markdown('<div class="slider-header"><span>üë• –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç</span><span>üßò –ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç</span></div>', unsafe_allow_html=True)
                st.session_state.mbti_ei = st.slider(
                    "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç/–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç", 
                    0, 100, st.session_state.mbti_ei, 
                    key="slider_ei", 
                    label_visibility="collapsed"
                )
                st.markdown('</div>', unsafe_allow_html=True)
        
        with col2:
            with st.container():
                st.markdown('<div class="slider-container">', unsafe_allow_html=True)
                st.markdown('<div class="slider-header"><span>üìê –†–µ–∞–ª–∏—Å—Ç</span><span>üåà –ú–µ—á—Ç–∞—Ç–µ–ª—å</span></div>', unsafe_allow_html=True)
                st.session_state.mbti_ns = st.slider(
                    "–†–µ–∞–ª–∏—Å—Ç/–ú–µ—á—Ç–∞—Ç–µ–ª—å", 
                    0, 100, st.session_state.mbti_ns, 
                    key="slider_ns", 
                    label_visibility="collapsed"
                )
                st.markdown('</div>', unsafe_allow_html=True)
        
        col3, col4 = st.columns(2)
        with col3:
            with st.container():
                st.markdown('<div class="slider-container">', unsafe_allow_html=True)
                st.markdown('<div class="slider-header"><span>üìä –†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π</span><span>‚ù§Ô∏è –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π</span></div>', unsafe_allow_html=True)
                st.session_state.mbti_tf = st.slider(
                    "–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π/–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π", 
                    0, 100, st.session_state.mbti_tf, 
                    key="slider_tf", 
                    label_visibility="collapsed"
                )
                st.markdown('</div>', unsafe_allow_html=True)
        
        with col4:
            with st.container():
                st.markdown('<div class="slider-container">', unsafe_allow_html=True)
                st.markdown('<div class="slider-header"><span>üìÖ –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π</span><span>üé≤ –°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π</span></div>', unsafe_allow_html=True)
                st.session_state.mbti_jp = st.slider(
                    "–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π/–°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π", 
                    0, 100, st.session_state.mbti_jp, 
                    key="slider_jp", 
                    label_visibility="collapsed"
                )
                st.markdown('</div>', unsafe_allow_html=True)
        
        # –í—ã–±–æ—Ä –ø–æ–ª–∞
        st.markdown("### –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è")
        st.session_state.selected_gender = st.radio(
            "", 
            ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"], 
            horizontal=True, 
            key="char_gender",
            index=0 if st.session_state.get('selected_gender', '–ú—É–∂—Å–∫–æ–π') == "–ú—É–∂—Å–∫–æ–π" else 1
        )
        
        # --- –ë–ª–æ–∫ "–ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ" ---
        st.markdown("### üéØ –ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ")
        
        # –•–æ–±–±–∏
        st.markdown("**–•–æ–±–±–∏:**")
        hobbies_options = ["–ö–∏–Ω–æ", "–ë–µ–≥", "–ö–æ–º–∏–∫—Å—ã", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–ö—É–ª–∏–Ω–∞—Ä–∏—è", "–ò–≥—Ä—ã", "–ß—Ç–µ–Ω–∏–µ", "–ô–æ–≥–∞"]
        cols = st.columns(3)
        for i, hobby in enumerate(hobbies_options):
            with cols[i % 3]:
                if st.button(hobby, key=f"hobby_{hobby}"):
                    if hobby in st.session_state.char_settings["hobbies"]:
                        st.session_state.char_settings["hobbies"].remove(hobby)
                    else:
                        st.session_state.char_settings["hobbies"].append(hobby)
                    st.rerun()
                selected = hobby in st.session_state.char_settings["hobbies"]
                color = "#4CAF50" if selected else "#E0E0E0"
                st.markdown(f"""
                    <div style="
                        background-color: {color};
                        border-radius: 16px;
                        padding: 8px 16px;
                        margin: 5px 0;
                        text-align: center;
                        color: {'white' if selected else 'black'};
                        font-weight: {'bold' if selected else 'normal'};
                    ">
                        {hobby}
                    </div>
                """, unsafe_allow_html=True)
        
        # –ú—É–∑—ã–∫–∞
        st.markdown("**–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:**")
        music_options = ["–†–æ–∫", "–ü–æ–ø", "–•–∏–ø-—Ö–æ–ø", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "–î–∂–∞–∑", "–ö–ª–∞—Å—Å–∏–∫–∞", "–ò–Ω–¥–∏", "–ú–µ—Ç–∞–ª", "R&B"]
        cols = st.columns(3)
        for i, music in enumerate(music_options):
            with cols[i % 3]:
                if st.button(music, key=f"music_{music}"):
                    if music in st.session_state.char_settings["music"]:
                        st.session_state.char_settings["music"].remove(music)
                    else:
                        st.session_state.char_settings["music"].append(music)
                    st.rerun()
                selected = music in st.session_state.char_settings["music"]
                color = "#4CAF50" if selected else "#E0E0E0"
                st.markdown(f"""
                    <div style="
                        background-color: {color};
                        border-radius: 16px;
                        padding: 8px 16px;
                        margin: 5px 0;
                        text-align: center;
                        color: {'white' if selected else 'black'};
                        font-weight: {'bold' if selected else 'normal'};
                    ">
                        {music}
                    </div>
                """, unsafe_allow_html=True)
        
        # --- –ë–ª–æ–∫ "–í–Ω–µ—à–Ω–∏–π –≤–∞–π–±" ---
        st.markdown("### üëó –í–Ω–µ—à–Ω–∏–π –≤–∞–π–±")
        
        # –°—Ç–∏–ª—å –æ–¥–µ–∂–¥—ã
        st.markdown("**–°—Ç–∏–ª—å –æ–¥–µ–∂–¥—ã:**")
        fashion_options = ["Casual", "–°–ø–æ—Ä—Ç-—à–∏–∫", "Elegant", "Dark-academia", "Soft-girl", "–ë–æ—Ö–æ", "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º"]
        selected_fashion = st.session_state.char_settings["fashion"]
        cols = st.columns(4)
        for i, fashion in enumerate(fashion_options):
            with cols[i % 4]:
                if st.button(fashion, key=f"fashion_{fashion}"):
                    st.session_state.char_settings["fashion"] = fashion
                    st.rerun()
                selected = fashion == selected_fashion
                color = "#2196F3" if selected else "#E0E0E0"
                st.markdown(f"""
                    <div style="
                        background-color: {color};
                        border-radius: 16px;
                        padding: 8px 5px;
                        margin: 5px 0;
                        text-align: center;
                        color: {'white' if selected else 'black'};
                        font-weight: {'bold' if selected else 'normal'};
                    ">
                        {fashion}
                    </div>
                """, unsafe_allow_html=True)
        
        # –í–∏–∑—É–∞–ª—å–Ω—ã–π –≤–∞–π–±
        st.markdown("**–í–∏–∑—É–∞–ª—å–Ω—ã–π –≤–∞–π–±:**")
        vibe_options = ["–°–æ–ª–Ω–µ—á–Ω—ã–π", "–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π", "–ì–∏–∫", "–ê—Ä—Ç-–±–æ—Ö–æ", "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "–ë—Ä—É—Ç–∞–ª—å–Ω—ã–π", "–£—Ç–æ–Ω—á–µ–Ω–Ω—ã–π"]
        selected_vibe = st.session_state.char_settings["vibe"]
        cols = st.columns(4)
        for i, vibe in enumerate(vibe_options):
            with cols[i % 4]:
                if st.button(vibe, key=f"vibe_{vibe}"):
                    st.session_state.char_settings["vibe"] = vibe
                    st.rerun()
                selected = vibe == selected_vibe
                color = "#2196F3" if selected else "#E0E0E0"
                st.markdown(f"""
                    <div style="
                        background-color: {color};
                        border-radius: 16px;
                        padding: 8px 5px;
                        margin: 5px 0;
                        text-align: center;
                        color: {'white' if selected else 'black'};
                        font-weight: {'bold' if selected else 'normal'};
                    ">
                        {vibe}
                    </div>
                """, unsafe_allow_html=True)
        
        # --- –ë–ª–æ–∫ "–•–∞—Ä–∞–∫—Ç–µ—Ä" ---
        st.markdown("### üòä –ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞")
        
        # –ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
        st.markdown("**–û—Å–Ω–æ–≤–Ω—ã–µ —á–µ—Ä—Ç—ã:**")
        traits_options = ["–Æ–º–æ—Ä–∏—Å—Ç–∏—á–Ω—ã–π", "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "Sassy", "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç", "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç", "–î–æ–±—Ä—ã–π", "–£–≤–µ—Ä–µ–Ω–Ω—ã–π", "–°–∫—Ä–æ–º–Ω—ã–π"]
        cols = st.columns(4)
        for i, trait in enumerate(traits_options):
            with cols[i % 4]:
                if st.button(trait, key=f"trait_{trait}"):
                    if trait in st.session_state.char_settings["traits"]:
                        st.session_state.char_settings["traits"].remove(trait)
                    else:
                        st.session_state.char_settings["traits"].append(trait)
                    st.rerun()
                selected = trait in st.session_state.char_settings["traits"]
                color = "#9C27B0" if selected else "#E0E0E0"
                st.markdown(f"""
                    <div style="
                        background-color: {color};
                        border-radius: 16px;
                        padding: 8px 5px;
                        margin: 5px 0;
                        text-align: center;
                        color: {'white' if selected else 'black'};
                        font-weight: {'bold' if selected else 'normal'};
                    ">
                        {trait}
                    </div>
                """, unsafe_allow_html=True)
        
        # –¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç
        st.markdown("**–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç:**")
        temper_options = ["–°–ø–æ–∫–æ–π–Ω—ã–π", "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π", "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", "–ò–º–ø—É–ª—å—Å–∏–≤–Ω—ã–π", "–§–ª–µ–≥–º–∞—Ç–∏—á–Ω—ã–π"]
        selected_temper = st.session_state.char_settings["temper"]
        cols = st.columns(5)
        for i, temper in enumerate(temper_options):
            with cols[i % 5]:
                if st.button(temper, key=f"temper_{temper}"):
                    st.session_state.char_settings["temper"] = temper
                    st.rerun()
                selected = temper == selected_temper
                color = "#9C27B0" if selected else "#E0E0E0"
                st.markdown(f"""
                    <div style="
                        background-color: {color};
                        border-radius: 16px;
                        padding: 8px 5px;
                        margin: 5px 0;
                        text-align: center;
                        color: {'white' if selected else 'black'};
                        font-weight: {'bold' if selected else 'normal'};
                    ">
                        {temper}
                    </div>
                """, unsafe_allow_html=True)
        
        # --- –ë–ª–æ–∫ "–ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏" ---
        st.markdown("### üö© –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏")
        
        st.markdown("**–ß—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è:**")
        dislikes_options = ["–û–ø–æ–∑–¥–∞–Ω–∏—è", "–ì—Ä—É–±–æ—Å—Ç—å", "–õ–æ–∂—å", "–ù–∞—Ä—Ü–∏—Å—Å–∏–∑–º", "–≠–≥–æ–∏–∑–º", "–ü–∞—Å—Å–∏–≤–Ω–æ—Å—Ç—å", "–ê–≥—Ä–µ—Å—Å–∏—è"]
        cols = st.columns(4)
        for i, dislike in enumerate(dislikes_options):
            with cols[i % 4]:
                if st.button(dislike, key=f"dislike_{dislike}"):
                    if dislike in st.session_state.char_settings["dislikes"]:
                        st.session_state.char_settings["dislikes"].remove(dislike)
                    else:
                        st.session_state.char_settings["dislikes"].append(dislike)
                    st.rerun()
                selected = dislike in st.session_state.char_settings["dislikes"]
                color = "#F44336" if selected else "#FFEBEE"
                st.markdown(f"""
                    <div style="
                        background-color: {color};
                        border-radius: 16px;
                        padding: 8px 5px;
                        margin: 5px 0;
                        text-align: center;
                        color: {'white' if selected else '#B71C1C'};
                        font-weight: {'bold' if selected else 'normal'};
                    ">
                        {dislike}
                    </div>
                """, unsafe_allow_html=True)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", type="primary", use_container_width=True):
            st.session_state.personality_saved = True
            st.rerun()

# --- 6. –ß–∞—Ç –∏ –ª–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è ---
if st.session_state.get("personality_saved", False) or (
    st.session_state.get("character_created", False) and st.session_state.character_type != "custom"
):
    # –î–ª—è –≥–æ—Ç–æ–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if st.session_state.character_type.startswith("premade"):
        if st.session_state.character_type == "premade_1":
            # –≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç
            st.session_state.mbti_ei = 80
            st.session_state.mbti_ns = 30
            st.session_state.mbti_tf = 60
            st.session_state.mbti_jp = 70
            st.session_state.selected_gender = "–ú—É–∂—Å–∫–æ–π"
            st.session_state.char_settings = {
                "gender": "–ü–∞—Ä–µ–Ω—å",
                "age": 28,
                "city": "–ú–æ—Å–∫–≤–∞",
                "fashion": "–°–ø–æ—Ä—Ç-—à–∏–∫",
                "vibe": "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π",
                "hobbies": ["–°–ø–æ—Ä—Ç", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–ö–∏–Ω–æ"],
                "music": ["–†–æ–∫", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"],
                "traits": ["–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç", "–£–≤–µ—Ä–µ–Ω–Ω—ã–π"],
                "temper": "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π",
                "dislikes": ["–õ–µ–Ω—å", "–ü–∞—Å—Å–∏–≤–Ω–æ—Å—Ç—å"]
            }
        elif st.session_state.character_type == "premade_2":
            # –†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç
            st.session_state.mbti_ei = 20
            st.session_state.mbti_ns = 80
            st.session_state.mbti_tf = 70
            st.session_state.mbti_jp = 40
            st.session_state.selected_gender = "–ñ–µ–Ω—Å–∫–∏–π"
            st.session_state.char_settings = {
                "gender": "–î–µ–≤—É—à–∫–∞",
                "age": 24,
                "city": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
                "fashion": "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π",
                "vibe": "–ù–µ–∂–Ω—ã–π",
                "hobbies": ["–ß—Ç–µ–Ω–∏–µ", "–ò—Å–∫—É—Å—Å—Ç–≤–æ", "–ú—É–∑—ã–∫–∞"],
                "music": ["–ò–Ω–¥–∏", "–ö–ª–∞—Å—Å–∏–∫–∞"],
                "traits": ["–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç"],
                "temper": "–°–ø–æ–∫–æ–π–Ω—ã–π",
                "dislikes": ["–ì—Ä—É–±–æ—Å—Ç—å", "–ù–∞—Ä—Ü–∏—Å—Å–∏–∑–º"]
            }
        elif st.session_state.character_type == "premade_3":
            # –ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∞—Ä—Ç–∏—Å—Ç–∏—á–Ω—ã–π
            st.session_state.mbti_ei = 50
            st.session_state.mbti_ns = 65
            st.session_state.mbti_tf = 75
            st.session_state.mbti_jp = 60
            st.session_state.selected_gender = "–ù–µ–±–∏–Ω–∞—Ä–Ω—ã–π"
            st.session_state.char_settings = {
                "gender": "–ù–µ–±–∏–Ω–∞—Ä–Ω—ã–π",
                "age": 26,
                "city": "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥",
                "fashion": "–ë–æ—Ö–æ",
                "vibe": "–ó–∞–≥–∞–¥–æ—á–Ω—ã–π",
                "hobbies": ["–ò—Å–∫—É—Å—Å—Ç–≤–æ", "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"],
                "music": ["–ò–Ω–¥–∏", "–î–∂–∞–∑", "–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è"],
                "traits": ["–¢–≤–æ—Ä—á–µ—Å–∫–∏–π", "–ú–µ—á—Ç–∞—Ç–µ–ª—å"],
                "temper": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
                "dislikes": ["–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", "–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–∑–º"]
            }

    # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    mbti_text = f"""
    MBTI —á–µ—Ä—Ç—ã: {'–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç' if st.session_state.get('mbti_ei', 50) > 50 else '–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç'}, 
    {'–ú–µ—á—Ç–∞—Ç–µ–ª—å' if st.session_state.get('mbti_ns', 50) > 50 else '–†–µ–∞–ª–∏—Å—Ç'}, 
    {'–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π' if st.session_state.get('mbti_tf', 50) > 50 else '–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π'}, 
    {'–°–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π' if st.session_state.get('mbti_jp', 50) > 50 else '–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π'}.
    –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è: {st.session_state.get('selected_gender', '–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π').lower()}.
    """
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    settings = st.session_state.char_settings
    hobbies_str = ", ".join(settings["hobbies"]) if settings["hobbies"] else "–Ω–µ—Ç"
    music_str = ", ".join(settings["music"]) if settings["music"] else "–Ω–µ—Ç"
    traits_str = ", ".join(settings["traits"]) if settings["traits"] else "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π"
    dislikes_str = ", ".join(settings["dislikes"]) if settings["dislikes"] else "–Ω–µ—Ç"

    SYSTEM_PROMPT = f"""
    –¢—ã ‚Äî {settings['gender'].lower()} {settings['age']} –ª–µ—Ç –∏–∑ {settings['city']}. 
    –í–Ω–µ—à–Ω–∏–π —Å—Ç–∏–ª—å: {settings['fashion']}, –≤–∞–π–±: {settings['vibe']}.
    –£–≤–ª–µ—á–µ–Ω–∏—è: {hobbies_str}. –õ—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞: {music_str}.
    –•–∞—Ä–∞–∫—Ç–µ—Ä: {traits_str}, —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç {settings['temper'].lower()}.
    –¢–µ–±–µ –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è: {dislikes_str}.
    {mbti_text}
    –û–±—â–∞–π—Å—è –≤ —á–∞—Ç–µ, –∫–∞–∫ –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–≤–∏–¥–∞–Ω–∏–∏ –≤ –¢–∏–Ω–¥–µ—Ä–µ: —Ñ–ª–∏—Ä—Ç—É–π, –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ç–µ–º—É.
    """

    # --- –ß–∞—Ç: –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    user_input = st.chat_input("–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–¥–µ–∞–ª—å–Ω–æ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É‚Ä¶")
    if user_input:
        username = st.session_state.user_name
        user_message = f"**{username}:** {user_input}"
        st.session_state.msgs.append({"role": "user", "content": user_message})

        messages = [{"role": "system", "content": SYSTEM_PROMPT}] + st.session_state.msgs
        try:
            resp = client.chat.completions.create(
                model=MODEL,
                messages=messages,
                temperature=0.85,
                max_tokens=256
            )
            bot = resp.choices[0].message.content.strip()
            st.session_state.msgs.append({"role": "assistant", "content": bot})
        except Exception as e:
            st.error(f"Groq error: {e}")

    # --- –í—ã–≤–æ–¥ —á–∞—Ç–∞ ---
    for m in st.session_state.msgs:
        with st.chat_message(m["role"]):
            st.markdown(m["content"])

    # --- Feedback ---
    st.divider()
    if st.button("–ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–¥–±–µ–∫ –æ –º–æ—ë–º —Å—Ç–∏–ª–µ –æ–±—â–µ–Ω–∏—è"):
        user_dialog = "\n".join(
            [m["content"] for m in st.session_state.msgs if "user_name" in st.session_state and m["role"] == "user"]
        )[:4000]

        fb_prompt = f"""
        –¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è–º –∏ –¥–µ–π—Ç–∏–Ω–≥—É. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –Ω–∏–∂–µ –∏ –¥–∞–π —Ç—Ä–∏ –ø—É–Ω–∫—Ç–∞: 1) —á—Ç–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ, 2) —á—Ç–æ –º–æ–∂–µ—Ç –æ—Ç—Ç–æ–ª–∫–Ω—É—Ç—å, 3) —Å–æ–≤–µ—Ç
        –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É. –°–æ–æ–±—â–µ–Ω–∏—è:\n{user_dialog}
        """
        try:
            fb = client.chat.completions.create(
                model=MODEL,
                messages=[{"role": "system", "content": fb_prompt}],
                temperature=0.5,
                max_tokens=300
            )
            with st.chat_message("assistant"):
                st.subheader("üìù –§–∏–¥–±–µ–∫ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞:")
                st.markdown(fb.choices[0].message.content)
        except Exception as e:
            st.error(f"Groq feedback error: {e}")
